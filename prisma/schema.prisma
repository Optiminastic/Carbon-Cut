// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  phoneNumber String?
  companyName String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // OTP fields
  otpCode     String?
  otpExpiry   DateTime?
  otpVerified Boolean   @default(false)
  
  // Relationships
  reports     PdfReport[]
  
  @@map("users")
}

model PdfReport {
  id                String            @id @default(cuid())
  
  // User relationship
  userId            String
  user              User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // User Information (denormalized for report)
  userName          String
  email             String
  companyName       String
  phoneNumber       String
  
  // Report Details
  disclosureFormat  DisclosureFormat
  
  // Certification
  isCertified       Boolean           @default(false)
  certificationId   String?           @unique
  certificationDate DateTime?
  
  // PDF Storage
  pdfUrl            String?
  cloudinaryPublicId String?
  
  // Report Metadata
  totalEmissions    Float
  activityCount     Int
  reportPeriod      String?
  
  // Timestamps
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  
  // Payment Information
  paymentStatus     PaymentStatus     @default(PENDING)
  paymentAmount     Float?
  paymentDate       DateTime?
  stripePaymentId   String?
  
  activities        ReportActivity[]  @relation("PdfReportActivities")

  @@map("pdf_reports")
}

enum DisclosureFormat {
  SECR
  CSRD
  SEC
  
  @@map("disclosure_format")
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
  
  @@map("payment_status")
}

model ReportActivity {
  id              String    @id @default(cuid())
  pdfReportId     String
  pdfReport       PdfReport @relation("PdfReportActivities", fields: [pdfReportId], references: [id], onDelete: Cascade)
  
  date            String
  market          String
  channel         String
  activityLabel   String
  quantity        Float
  co2Emissions    Float
  scope           Int
  campaign        String?
  notes           String?
  
  createdAt       DateTime  @default(now())
  
  @@map("report_activities")
}
